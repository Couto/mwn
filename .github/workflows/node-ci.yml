# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/node-ci.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/node-ci.yml'
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: npm ci
      - run: npm run lint
      - run: npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
      - name: Test usage with TypeScript
        run: npm run test:ts
        env:
          AUTH_JSON: ${{secrets.AUTH_JSON}}

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 10.x, 12.x, 14.x ]
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup MediaWiki instance using Docker for integration tests
        run: npm run setuplocalwiki
      - run: npm ci
      - uses: actions/download-artifact@v2
      - run: npm run test
        env:
          AUTH_JSON: ${{secrets.AUTH_JSON}}
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage

  coveralls:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/download-artifact@v2
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  # Upload coverage report to toolforge as well
  upload_coverage:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs: test
    steps:
      - uses: actions/download-artifact@v2
      - run: zip -r coverage.zip coverage
      - name: Upload coverage reports to Toolforge
        uses: garygrossgarten/github-action-scp@release
        with:
          local: /home/runner/work/mwn/mwn/coverage.zip
          remote: /data/project/mwn/coverage.zip
          host: login.toolforge.org
          username: ${{ secrets.TOOLFORGE_USERNAME }}
          privateKey: ${{ secrets.TOOLFORGE_PRIVATE_KEY }}
          rmRemote: true
      - name: Coverage
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: >-
            cd /data/project/mwn &&
            rm -rf coverage &&
            unzip coverage.zip &&
            rm -rf public_html/coverage &&
            rm -rf www/static/coverage &&
            cp -r coverage public_html &&
            cp -r coverage www/static
          host: login.toolforge.org
          username: ${{ secrets.TOOLFORGE_USERNAME }}
          privateKey: ${{ secrets.TOOLFORGE_PRIVATE_KEY }}
